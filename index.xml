<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RSI</title>
    <link>https://www.rsiproject.org/blog/</link>
    <description>Recent content on RSI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Thu, 28 Dec 2023 09:03:20 -0800</lastBuildDate>
    <atom:link href="https://www.rsiproject.org/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Network Policies</title>
      <link>https://www.rsiproject.org/blog/posts/k8s_network_policies/</link>
      <pubDate>Thu, 28 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/k8s_network_policies/</guid>
      <description>Por Isaias do Carmo&#xA;Introdução Kubernetes possui várias camadas de comunicação e prover segurança através de todas essas camadas pode se tornar uma tarefa árdua. Um dos desafios é o estabelecimento de um ambiente de isolamento no qual clusters, pods e namespaces possam se comunicar entre si, aplicando o conceitos como zero trust e defesa em profundidade.&#xA;Este artigo explora a implementação de Network Policies no Kubernetes, concentrando-se nas melhores práticas através de cenários práticos.</description>
    </item>
    <item>
      <title>Native DLL Injection Using LoadLibrary - Parte 04</title>
      <link>https://www.rsiproject.org/blog/posts/parte-04-native-dll-injection-using-loadlibrary/</link>
      <pubDate>Thu, 28 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/parte-04-native-dll-injection-using-loadlibrary/</guid>
      <description>Por Davi Chaves&#xA;O processo de injeção nativa de uma dll em um processo é bastante semelhante ao método convencional utilizando as funções da kernel32.dll. A lógica é exatamente igual:&#xA;NTSTATUS NtProcessStartup(PPEB peb) { // Abre o processo alvo NtOpenProcess(...); // Alocamos um pouco de memória no processo alvo NtAllocateVirtualMemory(...); // Escrevemos o nome da nossa dll na memória do processo alvo NtWriteVirtualMemory(...); // Pegamos o endereço da função LoadLibraryW LdrGetProcedureAddress(&amp;#34;LoadLibraryW&amp;#34;.</description>
    </item>
    <item>
      <title>SIGMA Rules Introduction - Parte 01</title>
      <link>https://www.rsiproject.org/blog/posts/sigma-rules-parte-01-introduction/</link>
      <pubDate>Thu, 28 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/sigma-rules-parte-01-introduction/</guid>
      <description>Por Davi Chaves&#xA;Table of Contents SIGMA Rules - Parte 01 - Introduction Tipos de regras SIGMA Funcionamento Escrevendo uma SIGMA Rule Campo Logsource Campo Detection Selection Condition Image, CommandLine&amp;hellip; what are they? Modificadores Exemplo de SIGMA Rule real Conclusão Reference Anteriormente, as detecções no âmbito do SIEM eram isoladas em compartimentos específicos vinculados a fornecedores ou plataformas particulares. Parceiros que pretendiam compartilhar conteúdo de detecção muitas vezes enfrentavam o desafio de traduzir uma consulta de um fornecedor para outro.</description>
    </item>
    <item>
      <title>SIGMA Rules Pipelines - Parte 02</title>
      <link>https://www.rsiproject.org/blog/posts/sigma-rules-parte-02-pipelines/</link>
      <pubDate>Thu, 28 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/sigma-rules-parte-02-pipelines/</guid>
      <description>Por Davi Chaves&#xA;Table of Contents SIGMA Rules - Parte 02 - Pipelines Objetivo Exemplo Thomas Patzke The Field Naming Problem Pipelines, what are they? Specification of Pipelines Specification of Transformations 1. field_name_mapping 1. add_condition Specification of Conditions RuleProcessingCondition Exemplo: LogsourceCondition DetectionItemProcessingCondition FieldNameProcessingCondition Exemplo: ExcludeFieldCondition Mapping Process Creation Rules Forçar um mapeamento O principal objetivo das SIGMAS Rules é descrever assinaturas de logs de maneira genérica, independente de fornecedor e ambiente.</description>
    </item>
    <item>
      <title>Escrevendo Aplicações Nativas para Windows - Parte 3</title>
      <link>https://www.rsiproject.org/blog/posts/enumhandlers/</link>
      <pubDate>Mon, 25 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/enumhandlers/</guid>
      <description>Por Davi Chaves&#xA;O objetivo desse artigo vai ser enumerar todos os processos e, em seguida enumerar todos as threads e handles de um processo específico.&#xA;NtQuerySystemInformation Essa função será usada para pegarmos quase todo tipo de informação do sistema. O primeiro parametro dela é um valor de um enum SYSTEM_INFORMATION_CLASS que vai definir que tipo de informação ela vai trazer. Abaixo a estrutura desse enum. Primeiramente, estaremos utilizando o valor SystemProcessInformation para obtermos uma lista de todos os processos.</description>
    </item>
    <item>
      <title>Aplicações em Flutter</title>
      <link>https://www.rsiproject.org/blog/posts/frida/</link>
      <pubDate>Wed, 20 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/frida/</guid>
      <description>Por Ramon Martins&#xA;Frida - Flutter &amp;amp; Kotlin - Parte 1 Essa série de artigos é sobre métodos de análise estática e dinâmica em aplicativos criados pelo framework Flutter, utilizando as linguagens Dart e Kotlin para construir aplicações para dispositivos móveis, com o sistema operacional Android.&#xA;Aplicação Flutter Foi criado uma aplicação em Flutter, utilizando a linguagem Dart e Kotlin chamando funções nativas de uma lib criada em c.</description>
    </item>
    <item>
      <title>Escrevendo Aplicações Nativas para Windows - Parte 2</title>
      <link>https://www.rsiproject.org/blog/posts/printf/</link>
      <pubDate>Mon, 18 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/printf/</guid>
      <description>Por Davi Chaves&#xA;Até o momento, temos uma aplicação nativa, mas não conseguimos printar nada. Uma forma de construirmos essa funcionalidade seria fazer nosso processo native escrever no standard output do processo pai. Entretanto, eu acabei encontrando algumas dificuldades nessa solução. Dessa forma, vamos utilizar uma outra alternativa: criar um arquivo output.txt e escrever todos as saidas do nosso programa nele.&#xA;Criando e Escrevendo em um Arquivo Para isso, vamos ter que utilizar duas APIs: NtCreateFile e NtWriteFile.</description>
    </item>
    <item>
      <title>Escrevendo Aplicações Nativas para Windows - Parte 1</title>
      <link>https://www.rsiproject.org/blog/posts/construindo-ambiente/</link>
      <pubDate>Tue, 05 Dec 2023 09:03:20 -0800</pubDate>
      <guid>https://www.rsiproject.org/blog/posts/construindo-ambiente/</guid>
      <description>Por Davi Chaves&#xA;O objetivo desse artigo é montarmos um binário que dependa exclusivamente da ntdll.dll. Abaixo estão algumas funções exportadas por essa biblioteca.&#xA;Using Native Functions Antes de construirmos uma aplicação que dependa apenas da ntdll.dll, vamos primeiro aprender a como utilizar as funções dessa biblioteca.&#xA;Primeiro Método: Dynamic Linking Como toda função exportada, podemos utilizar a função GetProcAddress para acharmos o endereço de uma certa função e chama-la quando quisermos.</description>
    </item>
    <item>
      <title></title>
      <link>https://www.rsiproject.org/blog/authors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.rsiproject.org/blog/authors/</guid>
      <description>Autores e mantenedores do blog Ramon Martins - (Bolsista Voluntário)&#xA;Linkedin&#xA;OSEP&#xA;Hall Of Fame - PortSwigger&#xA;Área de atuação: CloudSec, Pentest Mobile: iOS, Android&#xA;Pesquisador de segurança da informação, fundador do projeto RSI Universidade Federal do Ceará.&#xA;Mateus Santos - (Bolsista Voluntário)&#xA;Linkedin&#xA;Área de atuação: Engenharia Reversa/Análise de Malware&#xA;Pesquisador de ameaças, mantenedor do blog e membro do RSI desde 2018.&#xA;Davi Chaves - (Bolsista Voluntário)&#xA;Linkedin&#xA;Email</description>
    </item>
  </channel>
</rss>
